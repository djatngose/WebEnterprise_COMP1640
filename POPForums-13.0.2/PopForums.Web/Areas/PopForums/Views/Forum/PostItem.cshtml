@using PopForums.Extensions;
@using PopForums.Models;
@model Post

@{
	Topic topic = null;
	if (ViewBag.Topic != null)
	{
		topic = (Topic) ViewBag.Topic;
	}
}
<a name="@Model.PostID"></a>
<div class="@(Model.IsDeleted ? "bg-danger " : "")postItem" data-postid="@Model.PostID" data-userid="@Model.UserID">
    <div class="postUserData bg-primary">
        @if(Model.IsAnonymous ?? false)
        {
            <h3 class="postNameLink bg-primary"><span class="twirl glyphicon glyphicon-chevron-right"></span>Unknown person</h3>
        }
        else
        {
            <h3 class="postNameLink bg-primary"><span class="twirl glyphicon glyphicon-chevron-right"></span>@Model.Name</h3>
        }
        
        <div class="@((Model.IsAnonymous ?? false) ? "" : "miniProfileBox") bg-info text-info"></div>
        <small class="postTime text-right">
            @if (this.IsUserInRole(PermanentRoles.Moderator))
            {
                @:IP: @Model.IP -
            }
            <span class="fTime" data-utc="@FormatTime8601(Model.PostTime)">@FormatTime(Model.PostTime)</span>
        </small>
    </div>
	@*@if (!this.HideVanity() && ((Dictionary<int, int>)ViewBag.Avatars).ContainsKey(Model.UserID))
	{
		<img src="@Url.Action("Avatar", "Image", new {id = ((Dictionary<int, int>)ViewBag.Avatars)[Model.UserID]})" alt="@String.Format(PopForums.Resources.NameAvatar, Model.Name)" class="avatar pull-right" />
	}*@

	@Html.Raw(Model.FullText)
    @if (!String.IsNullOrEmpty(@Model.FileUrl))
    {
        @Html.ActionLink("File attachment", "Download", new { ImageName = @Model.FileUrl })
    }

	@if (Model.IsEdited && Model.LastEditTime.HasValue)
	{
		<small>@String.Format(PopForums.Resources.NameLastEdit, Model.LastEditName), <span class="fTime" data-utc="@FormatTime8601(Model.LastEditTime.Value)">@FormatTime(Model.LastEditTime.Value)</span></small>
	}

	@if (Model.ShowSig && !this.HideVanity() && ((Dictionary<int, string>)ViewBag.Signatures).ContainsKey(Model.UserID))
	{
		<hr />
		<div class="signature">@Html.Raw(((Dictionary<int, string>)ViewBag.Signatures)[Model.UserID])</div>
	}
	<div class="postToolContainer">
		
        <div class="voteCount label label-primary">@Html.Partial("~/Areas/PopForums/Views/Forum/Votes.cshtml", Model.countvote)</div>
		<ul class="postTools list-inline">
			@if (User != null && ((PopForums.Models.User)User).UserID != Model.UserID)
			{
				@*if (((List<int>)ViewBag.VotedPostIDs).Contains(Model.PostID))
				{
					<li>@PopForums.Resources.Voted</li>
				}
				else
				{*@
				    <li class="voteUp  @(((List<CountVote>)ViewBag.VotedPostIDs).Where(a=>a.PostID== Model.PostID && a.IsUp).Count()>0 ? "btn-link" : "") glyphicon glyphicon-thumbs-up"></li>
                    <li class="voteDown @(((List<CountVote>)ViewBag.VotedPostIDs).Where(a=>a.PostID== Model.PostID && !a.IsUp).Count()>0 ? "btn-link" : "") glyphicon glyphicon-thumbs-down"></li>
                //}
           
            }
			@*<li>@Html.ActionLink(PopForums.Resources.Link, "PostLink", "Forum", new { id = Model  .PostID }, null)</li>*@
			@if (User != null && topic != null && topic.IsClosed == false && !topic.NotReply)
			{
				<li><input type="button" class="replyLink btn-link" value="@PopForums.Resources.Reply" /></li>
				@*<li><input type="button" class="quoteLink btn-link" value="@PopForums.Resources.Quote" /></li>*@
			}
			@if (User.IsPostEditable(Model))
			{
			    if (Model.IsFirstInTopic && !topic.NotPostAll)
			    {
			        <li>@Html.ActionLink(PopForums.Resources.Edit, "Edit", "Forum", new {id = Model.PostID}, null)</li>
			        <li>
			            @using (Html.BeginForm("DeletePost", "Forum", new {id = Model.PostID}, FormMethod.Post, new {@class = "deletePostForm"}))
			            {
			                <input type="submit" value="@Html.PostDeleteLinkFormatter(Model)" class="btn-link"/>
			            }
			        </li>
                    if (!string.IsNullOrEmpty(@Model.FileUrl))
                    {
                        using (Html.BeginForm("DeleteFile", "Forum", new { id = Model.PostID }, FormMethod.Post, new { @class = "deletePostForm" }))
                        {
                        <input type="submit" value="Delete File Attachment" class="btn-link" /> }

                    }
                }
                else if (!topic.NotReply && !Model.IsFirstInTopic)
                {
                    <li>@Html.ActionLink(PopForums.Resources.Edit, "Edit", "Forum", new {id = Model.PostID}, null)</li>
                    <li>
                        @using (Html.BeginForm("DeletePost", "Forum", new { id = Model.PostID }, FormMethod.Post, new { @class = "deletePostForm" }))
                        { <input type="submit" value="@Html.PostDeleteLinkFormatter(Model)" class="btn-link" /> }
                    </li>
                }
            }
			@if (Model.IsEdited && this.IsUserInRole(PermanentRoles.Moderator))
			{
				<li><input data-postid="@Model.PostID" class="btn-link postModLogButton" type="button" value="@PopForums.Resources.ModerationLog" /></li>
			}
         
		</ul>
		<div class="moderationLog"></div>
	</div>
</div>